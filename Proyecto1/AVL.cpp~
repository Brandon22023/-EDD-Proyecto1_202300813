//
// Created by Marro on 13/12/2024.
//
#include <iostream>
#include "AVL/AVL.h"

#include <string>
#include <bits/error_constants.h>
using namespace std;
AVL::AVL() {
    this->raiz = nullptr;
}

NodoAVL* AVL::getRaiz() {
    return raiz;
}

void AVL::setRaiz(NodoAVL *raiz) {
    this->raiz = raiz;
}

//--------------------------------------------

void AVL::insertar(int valor) {
    NodoAVL *nodo = new NodoAVL(valor);

    insertar(nodo, this->raiz);
}


void AVL::insertar(NodoAVL *valor, NodoAVL *&raiz) {

    if (raiz== nullptr) {
        raiz = valor;
        factorDeEquilibrio(raiz);

        cout << "el fe de "+ std::to_string(valor->getValor()) + " es: "
        + to_string(factorDeEquilibrio(raiz)) << endl;
        return;
    }
    if (valor->getValor() < raiz->getValor()) {
        insertar(valor, raiz->getIzquierda());
    }else {
        insertar(valor, raiz->getDerecha());
    }

    cout << "el fe de "+ std::to_string(valor->getValor()) + " es: "
        + to_string(factorDeEquilibrio(raiz)) << endl;
}

int AVL::alturaMaxima(NodoAVL *nodo) {

    if (nodo == nullptr)return 0;

    int hijoIzquierdo= alturaMaxima(nodo->getIzquierda());
    int hijoDerecho=alturaMaxima(nodo->getDerecha());


    return hijoIzquierdo > hijoDerecho ? hijoIzquierdo + 1 : hijoDerecho +1;
}

int AVL::factorDeEquilibrio(NodoAVL *nodo) {
    return alturaMaxima(nodo->getDerecha())-alturaMaxima(nodo->getIzquierda());


}








